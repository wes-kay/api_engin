basePath: /v1
definitions:
  model.Content:
    properties:
      account_id:
        type: integer
      active:
        type: boolean
      anchor:
        type: string
      content:
        description: 1,073,741,824
        type: string
      copywrite:
        type: string
      created:
        type: string
      draft:
        type: boolean
      id:
        type: integer
      page_id:
        type: integer
      title:
        type: string
      updated:
        type: string
      weight:
        type: integer
    type: object
  model.Media:
    properties:
      created:
        type: string
      fk_account_id:
        type: integer
      fk_media_wrapper_id:
        type: integer
      fk_record_id:
        type: integer
      id:
        type: integer
      source:
        type: string
      type:
        type: integer
      updated:
        type: string
    type: object
  model.Page:
    properties:
      absolute_url:
        type: string
      active:
        type: boolean
      created:
        type: string
      id:
        type: integer
      title:
        type: string
      updated:
        type: string
    type: object
  model.Project:
    properties:
      created:
        type: string
      id:
        type: integer
      title:
        type: string
      type:
        type: integer
      updated:
        type: string
    type: object
  model.SignInResponse:
    properties:
      token:
        type: string
    type: object
host: api.engin
info:
  contact:
    email: io.labs.development@gmail.com
    name: API Support
  title: Engin
  version: "1.0"
paths:
  /signin:
    post:
      consumes:
      - application/json
      parameters:
      - in: formData
        name: email
        required: true
        type: string
      - in: formData
        name: email_validated
        type: boolean
      - in: formData
        name: fk_account_id
        type: integer
      - in: formData
        name: id
        type: integer
      - in: formData
        name: password
        required: true
        type: string
      - in: formData
        name: temp
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SignInResponse'
      summary: Sign Into Account
      tags:
      - Account
  /signup:
    post:
      consumes:
      - application/json
      parameters:
      - in: formData
        name: account_name
        type: string
      - in: formData
        name: email
        required: true
        type: string
      - in: formData
        name: password
        required: true
        type: string
      - in: formData
        name: passwordconfirm
        required: true
        type: string
      - in: formData
        name: temp
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Creates an account on the service
      tags:
      - Account
  /v1/Media/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for page
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Deletes Media by ID
      tags:
      - Media
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for Media account
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Creates Media
      tags:
      - Media
  /v1/account/{id}/pages:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for page
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Page'
            type: array
      summary: Gets all pages from Account ID
      tags:
      - Page
  /v1/account/{id}/projects:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for project
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Project'
            type: array
      summary: Gets projects by account ID
      tags:
      - Project
  /v1/content/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for page
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Deletes content by ID
      tags:
      - Content
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for page
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Content'
      summary: Gets content from ID
      tags:
      - Content
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for page
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Creates content
      tags:
      - Content
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for page
        in: query
        name: id
        required: true
        type: string
      - in: formData
        name: account_id
        type: integer
      - in: formData
        name: active
        type: boolean
      - in: formData
        name: anchor
        type: string
      - description: 1,073,741,824
        in: formData
        name: content
        type: string
      - in: formData
        name: copywrite
        type: string
      - in: formData
        name: created
        type: string
      - in: formData
        name: draft
        type: boolean
      - in: formData
        name: id
        type: integer
      - in: formData
        name: page_id
        type: integer
      - in: formData
        name: title
        type: string
      - in: formData
        name: updated
        type: string
      - in: formData
        name: weight
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Updates content by ID
      tags:
      - Content
  /v1/media/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for page
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Media'
      summary: Gets media by ID
      tags:
      - Media
  /v1/page/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for page
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Deletes a page by ID
      tags:
      - Page
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for page
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Page'
      summary: Returns a page by ID
      tags:
      - Page
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for page
        in: query
        name: id
        required: true
        type: string
      - in: formData
        name: absolute_url
        type: string
      - in: formData
        name: active
        type: boolean
      - in: formData
        name: created
        type: string
      - in: formData
        name: id
        type: integer
      - in: formData
        name: title
        type: string
      - in: formData
        name: updated
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Creates a page
      tags:
      - Page
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for page
        in: query
        name: id
        required: true
        type: string
      - in: formData
        name: absolute_url
        type: string
      - in: formData
        name: active
        type: boolean
      - in: formData
        name: created
        type: string
      - in: formData
        name: id
        type: integer
      - in: formData
        name: title
        type: string
      - in: formData
        name: updated
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Updates a page by ID
      tags:
      - Page
  /v1/project/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for project
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Deletes a Project by ID
      tags:
      - Project
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for project
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
      summary: Gets project by ID
      tags:
      - Project
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - in: formData
        name: title
        required: true
        type: string
      - in: formData
        name: type
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Creates a project
      tags:
      - Project
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for project
        in: query
        name: id
        required: true
        type: string
      - in: formData
        name: title
        required: true
        type: string
      - in: formData
        name: type
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Updates a product by ID
      tags:
      - Project
  /v1/project/{id}/page:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for page
        in: query
        name: id
        required: true
        type: string
      - in: formData
        name: absolute_url
        type: string
      - in: formData
        name: active
        type: boolean
      - in: formData
        name: created
        type: string
      - in: formData
        name: id
        type: integer
      - in: formData
        name: title
        type: string
      - in: formData
        name: updated
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Creates a page and inserts into project
      tags:
      - Page
  /v1/project/{id}/pages:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for project
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Page'
            type: array
      summary: Gets all pages from project ID
      tags:
      - Page
  /v1/signup/{uid}:
    post:
      consumes:
      - application/json
      parameters:
      - description: uid from email
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Verifies an email with a UID sent to the account email
      tags:
      - verify
swagger: "2.0"
